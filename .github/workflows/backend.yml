name: Backend CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
    
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r ml-backend/requirements.txt
      
      - name: Test Code
        run: pytest ml-backend/tests
      
      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: eu-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image 
        id: build-image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: Docker/backend/backend-Docker
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ steps.login-ecr.outputs.registry }}/ml-inv-planner/backend:${{ github.sha }}

      - name: Trivy Vulnerability Scan
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ steps.build-image.outputs.imageid }}
          exit-code: '1'
          severity: 'CRITICAL'
          format: 'table'

      - name: Push Image to ECR
        if: success()
        run: docker push ${{ steps.login-ecr.outputs.registry }}/ml-inv-planner/backend:${{ github.sha }}

      - name: Setup Helm
        uses: azure/setup-helm@v4.3.0
        with: 
          version: 'latest'

      - name: Deploy to EKS with Helm
        run: |
          aws eks update-kubeconfig --region eu-west-1 --name ml-inv-planner-eks
          helm upgrade --install backend ./helm/backend \
            --set image.repository=${{ steps.login-ecr.outputs.registry }}/ml-inv-planner/backend \
            --set image.tag=${{ github.sha }}
